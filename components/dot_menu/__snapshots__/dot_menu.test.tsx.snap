// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/dot_menu/DotMenu should match snapshot, canDelete 1`] = `
<MenuWrapper
  animationComponent={[Function]}
  className=""
  onToggle={[MockFunction]}
>
  <OverlayTrigger
    className="hidden-xs"
    defaultOverlayShown={false}
    delayShow={500}
    overlay={
      <Tooltip
        bsClass="tooltip"
        className="hidden-xs"
        id="dotmenu-icon-tooltip"
        placement="right"
      >
        <Memo(MemoizedFormattedMessage)
          defaultMessage="More"
          id="post_info.dot_menu.tooltip.more_actions"
        />
      </Tooltip>
    }
    placement="top"
    rootClose={true}
    trigger={
      Array [
        "hover",
        "focus",
      ]
    }
  >
    <button
      aria-expanded="false"
      aria-label="actions"
      className="post-menu__item"
      id="CENTER_button_post_id_1"
      type="button"
    >
      <DotsHorizontalIcon
        className="icon icon--small"
      />
    </button>
  </OverlayTrigger>
  <Menu
    ariaLabel="Post extra options"
    id="CENTER_dropdown_post_id_1"
    openLeft={true}
    openUp={false}
  >
    <MenuItemAction
      leftDecorator={
        <i
          className="icon icon-reply-outline"
          style={
            Object {
              "fontSize": 18,
              "marginTop": 1,
            }
          }
        />
      }
      onClick={[MockFunction]}
      rightDecorator="R"
      show={true}
      text="Reply"
    />
    <Connect(ChannelPermissionGate)
      channelId=""
      permissions={
        Array [
          "add_reaction",
        ]
      }
    >
      <MenuItemAction
        onClick={[Function]}
        show={false}
        text="Add Reaction"
      />
    </Connect(ChannelPermissionGate)>
    <MenuItemAction
      extraText="You will be notified about replies"
      id="follow_post_thread_post_id_1"
      leftDecorator={
        <i
          className="icon icon-message-check-outline"
          style={
            Object {
              "fontSize": 18,
              "marginTop": 1,
            }
          }
        />
      }
      onClick={[Function]}
      rightDecorator="F"
      show={false}
      text="Follow message"
    />
    <MenuItemAction
      id="unread_post_post_id_1"
      leftDecorator={
        <i
          className="icon icon-mark-as-unread"
          style={
            Object {
              "fontSize": 18,
              "marginTop": 1,
            }
          }
        />
      }
      onClick={[Function]}
      rightDecorator="U"
      show={true}
      text="Mark as Unread"
    />
    <MenuItemAction
      onClick={[Function]}
      show={false}
      text="Remove from Saved"
    />
    <MenuItemAction
      onClick={[Function]}
      show={false}
      text="Save"
    />
    <MenuItemAction
      id="unpin_post_post_id_1"
      leftDecorator={
        <i
          className="icon icon-pin-outline post-menu__item--active"
          style={
            Object {
              "fontSize": 18,
              "marginTop": 1,
            }
          }
        />
      }
      onClick={[Function]}
      rightDecorator="P"
      show={false}
      text="Unpin"
    />
    <MenuItemAction
      id="pin_post_post_id_1"
      leftDecorator={
        <i
          className="icon icon-pin-outline"
          style={
            Object {
              "fontSize": 18,
              "marginTop": 1,
            }
          }
        />
      }
      onClick={[Function]}
      rightDecorator="P"
      show={true}
      text="Pin"
    />
    <li
      className="MenuItem__divider"
      id="divider_post_post_id_1_edit"
      role="menuitem"
    />
    <MenuItemAction
      id="permalink_post_id_1"
      leftDecorator={
        <i
          className="icon icon-link-variant"
          style={
            Object {
              "fontSize": 18,
              "marginTop": 1,
            }
          }
        />
      }
      onClick={[Function]}
      rightDecorator="K"
      show={true}
      text="Copy Link"
    />
    <li
      className="MenuItem__divider"
      id="divider_post_post_id_1_edit"
      role="menuitem"
    />
    <MenuItemAction
      id="edit_post_post_id_1"
      leftDecorator={
        <i
          className="icon icon-pencil-outline"
          style={
            Object {
              "fontSize": 18,
              "marginTop": 1,
            }
          }
        />
      }
      onClick={[Function]}
      rightDecorator="E"
      show={true}
      text="Edit"
    />
    <MenuItemAction
      id="delete_post_post_id_1"
      isDangerous={true}
      leftDecorator={
        <i
          className="icon icon-trash-can-outline"
          style={
            Object {
              "fontSize": 18,
              "marginTop": 1,
            }
          }
        />
      }
      onClick={[Function]}
      rightDecorator="delete"
      show={true}
      text="Delete"
    />
  </Menu>
</MenuWrapper>
`;

exports[`components/dot_menu/DotMenu should match snapshot, on Center 1`] = `
<MenuWrapper
  animationComponent={[Function]}
  className=""
  onToggle={[MockFunction]}
>
  <OverlayTrigger
    className="hidden-xs"
    defaultOverlayShown={false}
    delayShow={500}
    overlay={
      <Tooltip
        bsClass="tooltip"
        className="hidden-xs"
        id="dotmenu-icon-tooltip"
        placement="right"
      >
        <Memo(MemoizedFormattedMessage)
          defaultMessage="More"
          id="post_info.dot_menu.tooltip.more_actions"
        />
      </Tooltip>
    }
    placement="top"
    rootClose={true}
    trigger={
      Array [
        "hover",
        "focus",
      ]
    }
  >
    <button
      aria-expanded="false"
      aria-label="actions"
      className="post-menu__item"
      id="CENTER_button_post_id_1"
      type="button"
    >
      <DotsHorizontalIcon
        className="icon icon--small"
      />
    </button>
  </OverlayTrigger>
  <Menu
    ariaLabel="Post extra options"
    id="CENTER_dropdown_post_id_1"
    openLeft={true}
    openUp={false}
  >
    <MenuItemAction
      leftDecorator={
        <i
          className="icon icon-reply-outline"
          style={
            Object {
              "fontSize": 18,
              "marginTop": 1,
            }
          }
        />
      }
      onClick={[MockFunction]}
      rightDecorator="R"
      show={true}
      text="Reply"
    />
    <Connect(ChannelPermissionGate)
      channelId=""
      permissions={
        Array [
          "add_reaction",
        ]
      }
    >
      <MenuItemAction
        onClick={[Function]}
        show={false}
        text="Add Reaction"
      />
    </Connect(ChannelPermissionGate)>
    <MenuItemAction
      extraText="You will be notified about replies"
      id="follow_post_thread_post_id_1"
      leftDecorator={
        <i
          className="icon icon-message-check-outline"
          style={
            Object {
              "fontSize": 18,
              "marginTop": 1,
            }
          }
        />
      }
      onClick={[Function]}
      rightDecorator="F"
      show={false}
      text="Follow message"
    />
    <MenuItemAction
      id="unread_post_post_id_1"
      leftDecorator={
        <i
          className="icon icon-mark-as-unread"
          style={
            Object {
              "fontSize": 18,
              "marginTop": 1,
            }
          }
        />
      }
      onClick={[Function]}
      rightDecorator="U"
      show={true}
      text="Mark as Unread"
    />
    <MenuItemAction
      onClick={[Function]}
      show={false}
      text="Remove from Saved"
    />
    <MenuItemAction
      onClick={[Function]}
      show={false}
      text="Save"
    />
    <MenuItemAction
      id="unpin_post_post_id_1"
      leftDecorator={
        <i
          className="icon icon-pin-outline post-menu__item--active"
          style={
            Object {
              "fontSize": 18,
              "marginTop": 1,
            }
          }
        />
      }
      onClick={[Function]}
      rightDecorator="P"
      show={false}
      text="Unpin"
    />
    <MenuItemAction
      id="pin_post_post_id_1"
      leftDecorator={
        <i
          className="icon icon-pin-outline"
          style={
            Object {
              "fontSize": 18,
              "marginTop": 1,
            }
          }
        />
      }
      onClick={[Function]}
      rightDecorator="P"
      show={true}
      text="Pin"
    />
    <li
      className="MenuItem__divider"
      id="divider_post_post_id_1_edit"
      role="menuitem"
    />
    <MenuItemAction
      id="permalink_post_id_1"
      leftDecorator={
        <i
          className="icon icon-link-variant"
          style={
            Object {
              "fontSize": 18,
              "marginTop": 1,
            }
          }
        />
      }
      onClick={[Function]}
      rightDecorator="K"
      show={true}
      text="Copy Link"
    />
    <li
      className="MenuItem__divider"
      id="divider_post_post_id_1_edit"
      role="menuitem"
    />
    <MenuItemAction
      id="edit_post_post_id_1"
      leftDecorator={
        <i
          className="icon icon-pencil-outline"
          style={
            Object {
              "fontSize": 18,
              "marginTop": 1,
            }
          }
        />
      }
      onClick={[Function]}
      rightDecorator="E"
      show={true}
      text="Edit"
    />
    <MenuItemAction
      id="delete_post_post_id_1"
      isDangerous={true}
      leftDecorator={
        <i
          className="icon icon-trash-can-outline"
          style={
            Object {
              "fontSize": 18,
              "marginTop": 1,
            }
          }
        />
      }
      onClick={[Function]}
      rightDecorator="delete"
      show={false}
      text="Delete"
    />
  </Menu>
</MenuWrapper>
`;
